version: '3'
services:

# Album Manager
  album-manager:
    build:
      context: mra-album-manager
    image: ngrefarch/album-manager:local
    container_name: album-manager
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PASSWORD=mra_dev
      - DATABASE_USERNAME=root
      - NEWRELIC_LICENSE_KEY=<your new relic key>
      - NETWORK=fabric
      - CONTAINER_ENGINE=local
      - PORT=3306
      - UPLOADER_PHOTO=http://localhost/uploader/image/uploads/photos/
    ports:
      - "82:443"
    links:
      - mysql
    depends_on:
      - mysql
    volumes:
      - ./mra-album-manager/app:/usr/src/app

# Auth Proxy
  auth-proxy:
    build:
      context: mra-auth-proxy
    image: ngrefarch/auth-proxy:local
    container_name: auth-proxy
    volumes:
      - ./mra-auth-proxy/app:/usr/src/app
    environment:
      - AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY>
      - AWS_REGION=us-west-1
      - AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>
      - FLASK_DEBUG=True
      - NETWORK=fabric
      - CONTAINER_ENGINE=local
      - PAGES_URL=pages
      - REDIS_ENABLED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_TTL=300
      - GOOGLE_CLIENT_ID=<GOOGLE_CLIENT_ID>
      - GOOGLE_CLIENT_SECRET=<GOOGLE_CLIENT_SECRET>
      - FACEBOOK_APP_ID=<FACEBOOK_APP_ID>
      - FACEBOOK_APP_SECRET=<FACEBOOK_APP_SECRET>
    ports:
      - "80:80"
      - "443:443"
    links:
      - pages
      - user-manager
      - redis
    depends_on:
      - pages
      - user-manager
      - redis

# Content DB
  content-db:
    image: docker.io/rethinkdb:latest
    container_name: content-db
    ports:
      - "28015:28015"
      - "28080:8080"
    volumes:
      - ./rethinkdb:/data

# Content Service
  content-service:
    build:
      context: mra-content-service
    image: ngrefarch/content-service:local
    container_name: content-service
    volumes:
      - ./mra-content-service/app:/go/src/app
    environment:
      - NETWORK=fabric
      - CONTAINER_ENGINE=local
      - RETHINKDB_URL=content-db:28015
      - ALBUMS_PATH=/album-manager/albums
      - ALBUM_MANAGER_HOST=http://localhost
    ports:
      - "86:443"
    links:
      - album-manager
      - uploader
      - user-manager
    depends_on:
      - content-db

# Dynamo DB
  dynamo-db:
    image: docker.io/deangiberson/aws-dynamodb-local:latest
    container_name: dynamo-db
    ports:
      - "8000:8000"
    volumes:
      - ./dynamo_db:/var/dynamodb_local

# Fake S3
  fake-s3:
    image: docker.io/lphoward/fake-s3:latest
    container_name: fake-s3
    ports:
      - "4569:4569"
    volumes:
      - ./fakes3:/fakes3_root

# MySQL
  mysql:
    image: docker.io/mysql:latest
    container_name: mra-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mra_dev
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql

# Pages
  pages:
    build:
      context: mra-pages
    image: ngrefarch/pages:local
    environment:
      - AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY>
      - AWS_REGION=us-west-1
      - AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>
      - CONTENTSERVICE_ARTICLE_PATH=/content-service/v1/content
      - CONTENTSERVICE_ENDPOINT_URL=http://localhost
      - GOOGLE_CLIENT_ID=<GOOGLE_CLIENT_ID>
      - NETWORK=fabric
      - CONTAINER_ENGINE=local
      - S3_BUCKET=mra-images
      - ALBUMMANAGER_ALBUM_PATH=/album-manager/albums
      - ALBUMMANAGER_CATALOG_PATH=/album-manager/albums
      - ALBUMMANAGER_ENDPOINT_URL=http://localhost
      - ALBUMMANAGER_IMAGES_PATH=/album-manager/images
      - ALBUMMANAGER_PUBLIC_PATH=/album-manager/public
      - PHOTOUPLOADER_ALBUM_PATH=/uploader/album
      - PHOTOUPLOADER_ENDPOINT_URL=http://localhost
      - PHOTOUPLOADER_IMAGE_PATH=/uploader/image
      - REDIS_CACHE_PORT=6379
      - REDIS_CACHE_URL=redis
      - SYMFONY_ENV=dev
      - USERMANAGER_ENDPOINT_URL=http://localhost
      - USERMANAGER_LOCAL_PATH=/user-manager/v1/users
      - USERMANAGER_USER_PATH=/user-manager/v1/users
    ports:
      - "81:443"
    links:
      - album-manager
      - uploader
      - user-manager
      - redis
    volumes:
      - ./mra-pages/ingenious-pages/app/Resources:/ingenious-pages/app/Resources
      - ./mra-pages/ingenious-pages/app/web:/ingenious-pages/app/web
      - ./mra-pages/ingenious-pages/app/config:/ingenious-pages/app/config
      - ./mra-pages/ingenious-pages/web:/ingenious-pages/web
      - ./mra-pages/ingenious-pages/src:/ingenious-pages/src
      - ./mra-pages/ingenious-pages/less-css:/ingenious-pages/less-css
      - ./mra-pages/ingenious-pages/tests:/ingenious-pages/tests
      - ./mra-pages/ingenious-pages/Insert.php:/ingenious-pages/Insert.php
    container_name: pages
    depends_on:
      - album-manager
      - uploader
      - user-manager
      - redis


# Redis
  redis:
    image: redis:3.2.0
    container_name: mra-redis
    ports:
      - "6379:6379"

# Resizer
  resizer:
    build:
      context: mra-photoresizer
    image: ngrefarch/photoresizer:local
    container_name: resizer
    environment:
      - AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY>
      - AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>
      - S3_URL=http://fake-s3:4569
      - NETWORK=fabric
      - CONTAINER_ENGINE=local
      - REDIS_CACHE_PORT=6379
      - REDIS_CACHE_URL=redis
      - S3_BUCKET=mra-images
      - CPU_THRESHOLD=0.9
      - MEMORY_THRESHOLD=0.8
      - DISK_THRESHOLD=0.05
      - LARGE_IMAGE_SIZE=-1
      - MEDIUM_IMAGE_SIZE=1280
      - THUMB_IMAGE_SIZE=128
    ports:
      - "83:443"
    links:
      - redis
      - fake-s3
    depends_on:
      - fake-s3

# Uploader
  uploader:
    build:
      context: mra-photouploader
    image: ngrefarch/photouploader:local
    container_name: uploader
    volumes:
      - ./mra-photouploader/app:/usr/src/app
    environment:
      - ALBUM_MANAGER_URL=http://localhost/album-manager
      - AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY>
      - AWS_REGION=us-west-1
      - AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>
      - DEV_MODE=true
      - NETWORK=fabric
      - CONTAINER_ENGINE=local
      - RESIZER_URL=http://localhost/resizer/v1/image
      - S3_BUCKET=mra-images
      - S3_URL=http://fake-s3:4569
    ports:
      - "84:443"
    links:
      - album-manager
      - resizer
    depends_on:
      - album-manager
      - resizer


# User Manager
  user-manager:
    build:
      context: mra-user-manager
    image: ngrefarch/user-manager:local
    container_name: user-manager
    volumes:
      - ./mra-user-manager/app:/usr/src/app
    ports:
      - "85:443"
    environment:
      - ALBUM_MANAGER_URL=https://album-manager/albums
      - AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY>
      - AWS_DEFAULT_REGION=us-west-1
      - AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>
      - DB_ENDPOINT=http://dynamo-db:8000
      # - DEV_MODE=true
      - NETWORK=fabric
      - CONTAINER_ENGINE=local
      - VERIFY_CERTS=false
    links:
      - dynamo-db
      - album-manager
    depends_on:
      - dynamo-db
      - album-manager
